use crate::bezier::BezierPatch3D;
use glam::Vec3;
use rustica_foundation::geometry::{Geometry, GeometryBuilder};
use rustica_standard_shader::{StandardShaderVertex, StandardShaderVertexFactory};

/// Creates the Utah teapot geometry with the given resolution.
///
/// # Arguments
///
/// * `resolution` - The resolution for each patch (number of vertices per side)
/// * `scale` - Scale factor for the teapot size
/// * `color` - Base color for the teapot vertices
///
/// # Returns
///
/// A `Geometry<StandardShaderVertex>` containing the vertex and index data for the teapot.
pub fn create_utah_teapot(resolution: usize, scale: f32, color: Vec3) -> Geometry<StandardShaderVertex> {
    let patches = teapot_patches();
    let mut builder = GeometryBuilder::new();
    
    // Process each patch
    for patch in patches {
        // Scale the control points
        let scaled_patch = scale_patch(&patch, scale);
        
        // Generate mesh data from the patch
        let (positions, normals, uvs) = scaled_patch.generate_mesh_data(resolution);
        
        // Generate indices
        let indices = BezierPatch3D::generate_indices(resolution);
        
        // Build triangles from the patch
        for i in (0..indices.len()).step_by(3) {
            let idx1 = indices[i] as usize;
            let idx2 = indices[i + 1] as usize;
            let idx3 = indices[i + 2] as usize;
            
            builder.triangle(
                StandardShaderVertexFactory::create_vertex(
                    positions[idx1].into(), 
                    normals[idx1].into(), 
                    color.into(), 
                    uvs[idx1].into()
                ),
                StandardShaderVertexFactory::create_vertex(
                    positions[idx2].into(), 
                    normals[idx2].into(), 
                    color.into(), 
                    uvs[idx2].into()
                ),
                StandardShaderVertexFactory::create_vertex(
                    positions[idx3].into(), 
                    normals[idx3].into(), 
                    color.into(), 
                    uvs[idx3].into()
                )
            );
        }
    }
    
    builder.build()
}

/// Scales the control points of a Bezier patch.
fn scale_patch(patch: &BezierPatch3D, scale: f32) -> BezierPatch3D {
    let mut scaled_points = [[Vec3::ZERO; 4]; 4];
    
    for i in 0..4 {
        for j in 0..4 {
            scaled_points[i][j] = patch.control_points[i][j] * scale;
        }
    }
    
    BezierPatch3D::new(scaled_points)
}

/// Builds a 4x4 array of control points from the given vertices and indices.
///
/// The indices array contains 16 indices corresponding to the 4x4 grid of control points.
fn build_control_points(vertices: &[Vec3], indices: &[usize]) -> [[Vec3; 4]; 4] {
    let mut control_points = [[Vec3::ZERO; 4]; 4];
    
    for i in 0..4 {
        for j in 0..4 {
            // Access in row-major order
            control_points[i][j] = vertices[indices[(i * 4) + j]];
        }
    }
    
    control_points
}

/// Returns all 306 vertices of the Utah teapot.
fn utah_teapot_vertices() -> Vec<Vec3> {
    vec![
        // Vertex 0 (not used in the data as indices start from 1)
        Vec3::ZERO,
        // Vertex 1-20
        Vec3::new(1.40000, 0.00000, 2.40000),
        Vec3::new(1.40000, -0.78400, 2.40000),
        Vec3::new(0.78000, -1.40000, 2.40000),
        Vec3::new(0.00000, -1.40000, 2.40000),
        Vec3::new(1.33750, 0.00000, 2.53125),
        Vec3::new(1.33750, -0.74900, 2.53125),
        Vec3::new(0.74900, -1.33750, 2.53125),
        Vec3::new(0.00000, -1.33750, 2.53125),
        Vec3::new(1.43750, 0.00000, 2.53125),
        Vec3::new(1.43750, -0.80500, 2.53125),
        Vec3::new(0.80500, -1.43750, 2.53125),
        Vec3::new(0.00000, -1.43750, 2.53125),
        Vec3::new(1.50000, 0.00000, 2.40000),
        Vec3::new(1.50000, -0.84000, 2.40000),
        Vec3::new(0.84000, -1.50000, 2.40000),
        Vec3::new(0.00000, -1.50000, 2.40000),
        Vec3::new(-0.78400, -1.40000, 2.40000),
        Vec3::new(-1.40000, -0.78400, 2.40000),
        Vec3::new(-1.40000, 0.00000, 2.40000),
        // Vertex 21-40
        Vec3::new(-0.74900, -1.33750, 2.53125),
        Vec3::new(-1.33750, -0.74900, 2.53125),
        Vec3::new(-1.33750, 0.00000, 2.53125),
        Vec3::new(-0.80500, -1.43750, 2.53125),
        Vec3::new(-1.43750, -0.80500, 2.53125),
        Vec3::new(-1.43750, 0.00000, 2.53125),
        Vec3::new(-0.84000, -1.50000, 2.40000),
        Vec3::new(-1.50000, -0.84000, 2.40000),
        Vec3::new(-1.50000, 0.00000, 2.40000),
        Vec3::new(-1.40000, 0.78400, 2.40000),
        Vec3::new(-0.78400, 1.40000, 2.40000),
        Vec3::new(0.00000, 1.40000, 2.40000),
        Vec3::new(-1.33750, 0.74900, 2.53125),
        Vec3::new(-0.74900, 1.33750, 2.53125),
        Vec3::new(0.00000, 1.33750, 2.53125),
        Vec3::new(-1.43750, 0.80500, 2.53125),
        Vec3::new(-0.80500, 1.43750, 2.53125),
        Vec3::new(0.00000, 1.43750, 2.53125),
        Vec3::new(-1.50000, 0.84000, 2.40000),
        Vec3::new(-0.84000, 1.50000, 2.40000),
        Vec3::new(0.00000, 1.50000, 2.40000),
        // Vertex 41-60
        Vec3::new(0.78400, 1.40000, 2.40000),
        Vec3::new(1.40000, 0.78400, 2.40000),
        Vec3::new(0.74900, 1.33750, 2.53125),
        Vec3::new(1.33750, 0.74900, 2.53125),
        Vec3::new(0.80500, 1.43750, 2.53125),
        Vec3::new(1.43750, 0.80500, 2.53125),
        Vec3::new(0.84000, 1.50000, 2.40000),
        Vec3::new(1.50000, 0.84000, 2.40000),
        Vec3::new(1.75000, 0.00000, 1.87500),
        Vec3::new(1.75000, -0.98000, 1.87500),
        Vec3::new(0.98000, -1.75000, 1.87500),
        Vec3::new(0.00000, -1.75000, 1.87500),
        Vec3::new(2.00000, 0.00000, 1.35000),
        Vec3::new(2.00000, -1.12000, 1.35000),
        Vec3::new(1.12000, -2.00000, 1.35000),
        Vec3::new(0.00000, -2.00000, 1.35000),
        Vec3::new(2.00000, 0.00000, 0.90000),
        Vec3::new(2.00000, -1.12000, 0.90000),
        Vec3::new(1.12000, -2.00000, 0.90000),
        Vec3::new(0.00000, -2.00000, 0.90000),
        // Vertex 61-80
        Vec3::new(-0.98000, -1.75000, 1.87500),
        Vec3::new(-1.75000, -0.98000, 1.87500),
        Vec3::new(-1.75000, 0.00000, 1.87500),
        Vec3::new(-1.12000, -2.00000, 1.35000),
        Vec3::new(-2.00000, -1.12000, 1.35000),
        Vec3::new(-2.00000, 0.00000, 1.35000),
        Vec3::new(-1.12000, -2.00000, 0.90000),
        Vec3::new(-2.00000, -1.12000, 0.90000),
        Vec3::new(-2.00000, 0.00000, 0.90000),
        Vec3::new(-1.75000, 0.98000, 1.87500),
        Vec3::new(-0.98000, 1.75000, 1.87500),
        Vec3::new(0.00000, 1.75000, 1.87500),
        Vec3::new(-2.00000, 1.12000, 1.35000),
        Vec3::new(-1.12000, 2.00000, 1.35000),
        Vec3::new(0.00000, 2.00000, 1.35000),
        Vec3::new(-2.00000, 1.12000, 0.90000),
        Vec3::new(-1.12000, 2.00000, 0.90000),
        Vec3::new(0.00000, 2.00000, 0.90000),
        Vec3::new(0.98000, 1.75000, 1.87500),
        Vec3::new(1.75000, 0.98000, 1.87500),
        // Vertex 81-100
        Vec3::new(1.12000, 2.00000, 1.35000),
        Vec3::new(2.00000, 1.12000, 1.35000),
        Vec3::new(1.12000, 2.00000, 0.90000),
        Vec3::new(2.00000, 1.12000, 0.90000),
        Vec3::new(2.00000, 0.00000, 0.45000),
        Vec3::new(2.00000, -1.12000, 0.45000),
        Vec3::new(1.12000, -2.00000, 0.45000),
        Vec3::new(0.00000, -2.00000, 0.45000),
        Vec3::new(1.50000, 0.00000, 0.22500),
        Vec3::new(1.50000, -0.84000, 0.22500),
        Vec3::new(0.84000, -1.50000, 0.22500),
        Vec3::new(0.00000, -1.50000, 0.22500),
        Vec3::new(1.50000, 0.00000, 0.15000),
        Vec3::new(1.50000, -0.84000, 0.15000),
        Vec3::new(0.84000, -1.50000, 0.15000),
        Vec3::new(0.00000, -1.50000, 0.15000),
        Vec3::new(-1.12000, -2.00000, 0.45000),
        Vec3::new(-2.00000, -1.12000, 0.45000),
        Vec3::new(-2.00000, 0.00000, 0.45000),
        Vec3::new(-0.84000, -1.50000, 0.22500),
        // Vertex 101-120
        Vec3::new(-1.50000, -0.84000, 0.22500),
        Vec3::new(-1.50000, 0.00000, 0.22500),
        Vec3::new(-0.84000, -1.50000, 0.15000),
        Vec3::new(-1.50000, -0.84000, 0.15000),
        Vec3::new(-1.50000, 0.00000, 0.15000),
        Vec3::new(-2.00000, 1.12000, 0.45000),
        Vec3::new(-1.12000, 2.00000, 0.45000),
        Vec3::new(0.00000, 2.00000, 0.45000),
        Vec3::new(-1.50000, 0.84000, 0.22500),
        Vec3::new(-0.84000, 1.50000, 0.22500),
        Vec3::new(0.00000, 1.50000, 0.22500),
        Vec3::new(-1.50000, 0.84000, 0.15000),
        Vec3::new(-0.84000, 1.50000, 0.15000),
        Vec3::new(0.00000, 1.50000, 0.15000),
        Vec3::new(1.12000, 2.00000, 0.45000),
        Vec3::new(2.00000, 1.12000, 0.45000),
        Vec3::new(0.84000, 1.50000, 0.22500),
        Vec3::new(1.50000, 0.84000, 0.22500),
        Vec3::new(0.84000, 1.50000, 0.15000),
        Vec3::new(1.50000, 0.84000, 0.15000),
        // Vertex 121-140
        Vec3::new(-1.60000, 0.00000, 2.02500),
        Vec3::new(-1.60000, -0.30000, 2.02500),
        Vec3::new(-1.50000, -0.30000, 2.25000),
        Vec3::new(-1.50000, 0.00000, 2.25000),
        Vec3::new(-2.30000, 0.00000, 2.02500),
        Vec3::new(-2.30000, -0.30000, 2.02500),
        Vec3::new(-2.50000, -0.30000, 2.25000),
        Vec3::new(-2.50000, 0.00000, 2.25000),
        Vec3::new(-2.70000, 0.00000, 2.02500),
        Vec3::new(-2.70000, -0.30000, 2.02500),
        Vec3::new(-3.00000, -0.30000, 2.25000),
        Vec3::new(-3.00000, 0.00000, 2.25000),
        Vec3::new(-2.70000, 0.00000, 1.80000),
        Vec3::new(-2.70000, -0.30000, 1.80000),
        Vec3::new(-3.00000, -0.30000, 1.80000),
        Vec3::new(-3.00000, 0.00000, 1.80000),
        Vec3::new(-1.50000, 0.30000, 2.25000),
        Vec3::new(-1.60000, 0.30000, 2.02500),
        Vec3::new(-2.50000, 0.30000, 2.25000),
        Vec3::new(-2.30000, 0.30000, 2.02500),
        // Vertex 141-160
        Vec3::new(-3.00000, 0.30000, 2.25000),
        Vec3::new(-2.70000, 0.30000, 2.02500),
        Vec3::new(-3.00000, 0.30000, 1.80000),
        Vec3::new(-2.70000, 0.30000, 1.80000),
        Vec3::new(-2.70000, 0.00000, 1.57500),
        Vec3::new(-2.70000, -0.30000, 1.57500),
        Vec3::new(-3.00000, -0.30000, 1.35000),
        Vec3::new(-3.00000, 0.00000, 1.35000),
        Vec3::new(-2.50000, 0.00000, 1.12500),
        Vec3::new(-2.50000, -0.30000, 1.12500),
        Vec3::new(-2.65000, -0.30000, 0.93750),
        Vec3::new(-2.65000, 0.00000, 0.93750),
        Vec3::new(-2.00000, -0.30000, 0.90000),
        Vec3::new(-1.90000, -0.30000, 0.60000),
        Vec3::new(-1.90000, 0.00000, 0.60000),
        Vec3::new(-3.00000, 0.30000, 1.35000),
        // Vertex 161-180
        Vec3::new(-2.70000, 0.30000, 1.57500),
        Vec3::new(-2.65000, 0.30000, 0.93750),
        Vec3::new(-2.50000, 0.30000, 1.12500),
        Vec3::new(-1.90000, 0.30000, 0.60000),
        Vec3::new(-2.00000, 0.30000, 0.90000),
        Vec3::new(1.70000, 0.00000, 1.42500),
        Vec3::new(1.70000, -0.66000, 1.42500),
        Vec3::new(1.70000, -0.66000, 0.60000),
        Vec3::new(1.70000, 0.00000, 0.60000),
        Vec3::new(2.60000, 0.00000, 1.42500),
        Vec3::new(2.60000, -0.66000, 1.42500),
        Vec3::new(3.10000, -0.66000, 0.82500),
        Vec3::new(3.10000, 0.00000, 0.82500),
        Vec3::new(2.30000, 0.00000, 2.10000),
        Vec3::new(2.30000, -0.25000, 2.10000),
        Vec3::new(2.40000, -0.25000, 2.02500),
        Vec3::new(2.40000, 0.00000, 2.02500),
        Vec3::new(2.70000, 0.00000, 2.40000),
        Vec3::new(2.70000, -0.25000, 2.40000),
        Vec3::new(3.30000, -0.25000, 2.40000),
        // Vertex 181-200
        Vec3::new(3.30000, 0.00000, 2.40000),
        Vec3::new(1.70000, 0.66000, 0.60000),
        Vec3::new(1.70000, 0.66000, 1.42500),
        Vec3::new(3.10000, 0.66000, 0.82500),
        Vec3::new(2.60000, 0.66000, 1.42500),
        Vec3::new(2.40000, 0.25000, 2.02500),
        Vec3::new(2.30000, 0.25000, 2.10000),
        Vec3::new(3.30000, 0.25000, 2.40000),
        Vec3::new(2.70000, 0.25000, 2.40000),
        Vec3::new(2.80000, 0.00000, 2.47500),
        Vec3::new(2.80000, -0.25000, 2.47500),
        Vec3::new(3.52500, -0.25000, 2.49375),
        Vec3::new(3.52500, 0.00000, 2.49375),
        Vec3::new(2.90000, 0.00000, 2.47500),
        Vec3::new(2.90000, -0.15000, 2.47500),
        Vec3::new(3.45000, -0.15000, 2.51250),
        Vec3::new(3.45000, 0.00000, 2.51250),
        Vec3::new(2.80000, 0.00000, 2.40000),
        Vec3::new(2.80000, -0.15000, 2.40000),
        Vec3::new(3.20000, -0.15000, 2.40000),
        // Vertex 201-220
        Vec3::new(3.20000, 0.00000, 2.40000),
        Vec3::new(3.52500, 0.25000, 2.49375),
        Vec3::new(2.80000, 0.25000, 2.47500),
        Vec3::new(3.45000, 0.15000, 2.51250),
        Vec3::new(2.90000, 0.15000, 2.47500),
        Vec3::new(3.20000, 0.15000, 2.40000),
        Vec3::new(2.80000, 0.15000, 2.40000),
        Vec3::new(0.00000, 0.00000, 3.15000),
        Vec3::new(0.00000, -0.00200, 3.15000),
        Vec3::new(0.00200, 0.00000, 3.15000),
        Vec3::new(0.80000, 0.00000, 3.15000),
        Vec3::new(0.80000, -0.45000, 3.15000),
        Vec3::new(0.45000, -0.80000, 3.15000),
        Vec3::new(0.00000, -0.80000, 3.15000),
        Vec3::new(0.00000, 0.00000, 2.85000),
        Vec3::new(0.20000, 0.00000, 2.70000),
        Vec3::new(0.20000, -0.11200, 2.70000),
        Vec3::new(0.11200, -0.20000, 2.70000),
        Vec3::new(0.00000, -0.20000, 2.70000),
        Vec3::new(-0.00200, 0.00000, 3.15000),
        // Vertex 221-240
        Vec3::new(-0.45000, -0.80000, 3.15000),
        Vec3::new(-0.80000, -0.45000, 3.15000),
        Vec3::new(-0.80000, 0.00000, 3.15000),
        Vec3::new(-0.11200, -0.20000, 2.70000),
        Vec3::new(-0.20000, -0.11200, 2.70000),
        Vec3::new(-0.20000, 0.00000, 2.70000),
        Vec3::new(0.00000, 0.00200, 3.15000),
        Vec3::new(-0.80000, 0.45000, 3.15000),
        Vec3::new(-0.45000, 0.80000, 3.15000),
        Vec3::new(0.00000, 0.80000, 3.15000),
        Vec3::new(-0.20000, 0.11200, 2.70000),
        Vec3::new(-0.11200, 0.20000, 2.70000),
        Vec3::new(0.00000, 0.20000, 2.70000),
        Vec3::new(0.45000, 0.80000, 3.15000),
        Vec3::new(0.80000, 0.45000, 3.15000),
        Vec3::new(0.11200, 0.20000, 2.70000),
        Vec3::new(0.20000, 0.11200, 2.70000),
        Vec3::new(0.40000, 0.00000, 2.55000),
        Vec3::new(0.40000, -0.22400, 2.55000),
        Vec3::new(0.22400, -0.40000, 2.55000),
        // Vertex 241-260
        Vec3::new(0.00000, -0.40000, 2.55000),
        Vec3::new(1.30000, 0.00000, 2.55000),
        Vec3::new(1.30000, -0.72800, 2.55000),
        Vec3::new(0.72800, -1.30000, 2.55000),
        Vec3::new(0.00000, -1.30000, 2.55000),
        Vec3::new(1.30000, 0.00000, 2.40000),
        Vec3::new(1.30000, -0.72800, 2.40000),
        Vec3::new(0.72800, -1.30000, 2.40000),
        Vec3::new(0.00000, -1.30000, 2.40000),
        Vec3::new(-0.22400, -0.40000, 2.55000),
        Vec3::new(-0.40000, -0.22400, 2.55000),
        Vec3::new(-0.40000, 0.00000, 2.55000),
        Vec3::new(-0.72800, -1.30000, 2.55000),
        Vec3::new(-1.30000, -0.72800, 2.55000),
        Vec3::new(-1.30000, 0.00000, 2.55000),
        Vec3::new(-0.72800, -1.30000, 2.40000),
        Vec3::new(-1.30000, -0.72800, 2.40000),
        Vec3::new(-1.30000, 0.00000, 2.40000),
        Vec3::new(-0.40000, 0.22400, 2.55000),
        Vec3::new(-0.22400, 0.40000, 2.55000),
        // Vertex 261-280
        Vec3::new(0.00000, 0.40000, 2.55000),
        Vec3::new(-1.30000, 0.72800, 2.55000),
        Vec3::new(-0.72800, 1.30000, 2.55000),
        Vec3::new(0.00000, 1.30000, 2.55000),
        Vec3::new(-1.30000, 0.72800, 2.40000),
        Vec3::new(-0.72800, 1.30000, 2.40000),
        Vec3::new(0.00000, 1.30000, 2.40000),
        Vec3::new(0.22400, 0.40000, 2.55000),
        Vec3::new(0.40000, 0.22400, 2.55000),
        Vec3::new(0.72800, 1.30000, 2.55000),
        Vec3::new(1.30000, 0.72800, 2.55000),
        Vec3::new(0.72800, 1.30000, 2.40000),
        Vec3::new(1.30000, 0.72800, 2.40000),
        Vec3::new(0.00000, 0.00000, 0.00000),
        Vec3::new(1.50000, 0.00000, 0.15000),
        Vec3::new(1.50000, 0.84000, 0.15000),
        Vec3::new(0.84000, 1.50000, 0.15000),
        Vec3::new(0.00000, 1.50000, 0.15000),
        Vec3::new(1.50000, 0.00000, 0.07500),
        Vec3::new(1.50000, 0.84000, 0.07500),
        // Vertex 281-306
        Vec3::new(0.84000, 1.50000, 0.07500),
        Vec3::new(0.00000, 1.50000, 0.07500),
        Vec3::new(1.42500, 0.00000, 0.00000),
        Vec3::new(1.42500, 0.79800, 0.00000),
        Vec3::new(0.79800, 1.42500, 0.00000),
        Vec3::new(0.00000, 1.42500, 0.00000),
        Vec3::new(-0.84000, 1.50000, 0.15000),
        Vec3::new(-1.50000, 0.84000, 0.15000),
        Vec3::new(-1.50000, 0.00000, 0.15000),
        Vec3::new(-0.84000, 1.50000, 0.07500),
        Vec3::new(-1.50000, 0.84000, 0.07500),
        Vec3::new(-1.50000, 0.00000, 0.07500),
        Vec3::new(-0.79800, 1.42500, 0.00000),
        Vec3::new(-1.42500, 0.79800, 0.00000),
        Vec3::new(-1.42500, 0.00000, 0.00000),
        Vec3::new(-1.50000, -0.84000, 0.15000),
        Vec3::new(-0.84000, -1.50000, 0.15000),
        Vec3::new(0.00000, -1.50000, 0.15000),
        Vec3::new(-1.50000, -0.84000, 0.07500),
        Vec3::new(-0.84000, -1.50000, 0.07500),
        Vec3::new(0.00000, -1.50000, 0.07500),
        Vec3::new(-1.42500, -0.79800, 0.00000),
        Vec3::new(-0.79800, -1.42500, 0.00000),
        Vec3::new(0.00000, -1.42500, 0.00000),
        Vec3::new(0.84000, -1.50000, 0.15000),
        Vec3::new(1.50000, -0.84000, 0.15000),
        Vec3::new(0.84000, -1.50000, 0.07500),
        Vec3::new(1.50000, -0.84000, 0.07500),
        Vec3::new(0.79800, -1.42500, 0.00000),
        Vec3::new(1.42500, -0.79800, 0.00000),
    ]
}

/// Returns all patch indices of the Utah teapot.
///
/// Each array contains 16 indices that reference vertices from the utah_teapot_vertices function.
/// The indices are 1-based as in the original Utah teapot data.
fn utah_teapot_patch_indices() -> Vec<[usize; 16]> {
    vec![
        // Body (Patches 1-12)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
        [4, 17, 18, 19, 8, 20, 21, 22, 12, 23, 24, 25, 16, 26, 27, 28],
        [19, 29, 30, 31, 22, 32, 33, 34, 25, 35, 36, 37, 28, 38, 39, 40],
        [31, 41, 42, 1, 34, 43, 44, 5, 37, 45, 46, 9, 40, 47, 48, 13],
        [13, 14, 15, 16, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60],
        [16, 26, 27, 28, 52, 61, 62, 63, 56, 64, 65, 66, 60, 67, 68, 69],
        [28, 38, 39, 40, 63, 70, 71, 72, 66, 73, 74, 75, 69, 76, 77, 78],
        [40, 47, 48, 13, 72, 79, 80, 49, 75, 81, 82, 53, 78, 83, 84, 57],
        [57, 58, 59, 60, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96],
        [60, 67, 68, 69, 88, 97, 98, 99, 92, 100, 101, 102, 96, 103, 104, 105],
        [69, 76, 77, 78, 99, 106, 107, 108, 102, 109, 110, 111, 105, 112, 113, 114],
        [78, 83, 84, 57, 108, 115, 116, 85, 111, 117, 118, 89, 114, 119, 120, 93],
        
        // Handle (Patches 13-16)
        [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136],
        [124, 137, 138, 121, 128, 139, 140, 125, 132, 141, 142, 129, 136, 143, 144, 133],
        [133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 69, 153, 154, 155],
        [136, 143, 144, 133, 148, 156, 157, 145, 152, 158, 159, 149, 155, 160, 161, 69],
        
        // Spout (Patches 17-20)
        [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177],
        [165, 178, 179, 162, 169, 180, 181, 166, 173, 182, 183, 170, 177, 184, 185, 174],
        [174, 175, 176, 177, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197],
        [177, 184, 185, 174, 189, 198, 199, 186, 193, 200, 201, 190, 197, 202, 203, 194],
        
        // Lid (Patches 21-28)
        [204, 204, 204, 204, 207, 208, 209, 210, 211, 211, 211, 211, 212, 213, 214, 215],
        [204, 204, 204, 204, 210, 217, 218, 219, 211, 211, 211, 211, 215, 220, 221, 222],
        [204, 204, 204, 204, 219, 224, 225, 226, 211, 211, 211, 211, 222, 227, 228, 229],
        [204, 204, 204, 204, 226, 230, 231, 207, 211, 211, 211, 211, 229, 232, 233, 212],
        [212, 213, 214, 215, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245],
        [215, 220, 221, 222, 237, 246, 247, 248, 241, 249, 250, 251, 245, 252, 253, 254],
        [222, 227, 228, 229, 248, 255, 256, 257, 251, 258, 259, 260, 254, 261, 262, 263],
        [229, 232, 233, 212, 257, 264, 265, 234, 260, 266, 267, 238, 263, 268, 269, 242],
        
        // Bottom (Patches 29-32)
        [270, 270, 270, 270, 279, 280, 281, 282, 275, 276, 277, 278, 93, 120, 119, 114],
        [270, 270, 270, 270, 282, 289, 290, 291, 278, 286, 287, 288, 114, 113, 112, 105],
        [270, 270, 270, 270, 291, 298, 299, 300, 288, 295, 296, 297, 105, 104, 103, 96],
        [270, 270, 270, 270, 300, 305, 306, 279, 297, 303, 304, 275, 96, 95, 94, 93],
    ]
}

/// Returns all Bezier patches that define the Utah teapot.
///
/// The patches are in standard Utah teapot layout with all 32 patches:
/// - Body (12 patches)
/// - Handle (4 patches)
/// - Spout (4 patches)
/// - Lid (8 patches)
/// - Bottom (4 patches)
fn teapot_patches() -> Vec<BezierPatch3D> {
    // Define all 306 vertices of the Utah teapot
    let vertices = utah_teapot_vertices();
    
    // Define all 32 patches using vertex indices
    let patch_indices = utah_teapot_patch_indices();
    
    // Create bezier patches from the vertices and indices
    let mut patches = Vec::with_capacity(32);
    
    for patch_idx in patch_indices {
        // Convert the 1-based indices from the data to 0-based for array indexing
        let control_points = build_control_points(&vertices, &patch_idx);
        patches.push(BezierPatch3D::new(control_points));
    }
    
    patches
}