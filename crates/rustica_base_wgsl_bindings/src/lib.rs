//! Rust bindings for WGSL shaders used across the Rustica project.
//! Generated by `build.rs` using `wgsl_to_wgpu`.

// This module directly includes the generated module declarations (pub mod phong; pub mod other_shader;)
// Access items directly via: crate::shaders::phong::VertexInput
pub mod shaders {
    // This include macro inserts the content of the file generated by build.rs
    // which contains `pub mod <shader_name>;` declarations.
    include!("phong.rs");
}

// Prelude for convenient imports of common items from all shaders.
// Use via: use rustica_base_wgsl_bindings::prelude::*;
pub mod prelude {
    // Re-export common items from the phong shader
    // pub use super::shaders::phong::{
    //     // Structs (renamed to avoid potential future conflicts)
    //     VertexInput as PhongVertexInput,
    //     VertexOutput as PhongVertexOutput,
    //     CameraUniform as PhongCameraUniform,
    //     ModelUniform as PhongModelUniform,
    //     LightUniform as PhongLightUniform,
    //     MaterialUniform as PhongMaterialUniform,
    //     // Functions (assuming wgsl_to_wgpu generates these common names)
    //     create_shader_module as create_phong_shader_module,
    //     create_pipeline_layout as create_phong_pipeline_layout,
    //     // Constants (if any are generated and needed in prelude)
    //     // BIND_GROUP_LAYOUTS as PHONG_BIND_GROUP_LAYOUTS, // Example
    // };

    // --- Add exports for other shaders below as they are added ---
    // pub use super::shaders::other_shader::{ /* ... */ };
}

// You can add other utility functions or types related to these shaders here if needed.
